% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/look_up.R
\name{look_up}
\alias{look_up}
\title{Look Up Values in a Data Frame}
\usage{
look_up(data, ..., bin = FALSE, value = "value")
}
\arguments{
\item{data}{A reference data frame.}

\item{...}{Individual characteristics, should be named 
like the columns of \code{data}.}

\item{bin}{Either logical: should all numeric variable be
binned, or character vector giving the names of
variables to bin (see examples).}

\item{value}{The value to extract from the reference 
data frame.}
}
\value{
A vector of values, same length as \code{...}.
}
\description{
A convenience function to easily look for values in a 
data frame.
}
\details{
This function is mostly used to extract 
information (such as mortality rates), given some 
individual characteristics.

If binning is activated for a numeric variable, 
each bin is considered to go from
one explicitly given value to the next.  If binning is not
activated, only values that are explicitly mentioned can be
referenced; other values will cause an error.
}
\examples{
tempdf <- expand.grid(arg1 = c("A", "B", "C"), arg2 = 1:4, arg3 = 1:5)
tempdf$value <- 1:60

look_up(
  data = tempdf,
  value = "value",
  arg1 = c("A", "B", "C", "B", "A"),
  arg2 = c(1, 1, 3.2, 3.0, 5), 
  arg3 = c(-1, 1, 1, 2, 3)
)

# binning doesn't catch values smaller than the smallest
# reference value
look_up(
  data = tempdf,
  value = "value",
  arg1 = c("A", "B", "C", "B", "A"),
  arg2 = c(1, 1, 3.2, 3.0, 5), 
  arg3 = c(-1, 1, 1, 2, 3),
  bin = TRUE
)
# bin can also be given as a character vector
# to avoid binning all numeric variables
look_up(
  data = tempdf,
  value = "value",
  arg1 = c("A", "B", "C", "B", "A"),
  arg2 = c(1, 1, 3.2, 3.0, 5), 
  arg3 = c(-1, 1, 1, 2, 3),
  bin = c("arg2")
)

age_related_df <- data.frame(age = 10 * 0:9, decade = 1:10)

look_up(age_related_df, age = c(0, 10, 20), value = "decade")

# binning lets us look up values not mentioned in the data frame
look_up(age_related_df, age = c(5, 15, 23.5), 
        value = "decade")
look_up(age_related_df, age = c(5, 15, 23.5), 
        value = "decade", bin = TRUE)
}

