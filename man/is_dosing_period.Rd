% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_dosing_period.R
\name{is_dosing_period}
\alias{is_dosing_period}
\title{Determine whether to dose during certain cycles.}
\usage{
is_dosing_period(N, init, pattern, first, then_every, cap = Inf)
}
\arguments{
\item{N}{cycles or periods to check.}

\item{init}{Non-repeating dosing indicator at beginning.}

\item{pattern}{Repeating dosing pattern after initial.}

\item{first}{if \code{init} is not specified, how many periods
at the beginning should be dosed.  Must be non-negative.}

\item{then_every}{if \code{pattern} is not specified, make it
(then_every - 1) zeroes followed by a 1.   If \code{then_every}
has any negative value, there is no dosing after the initial
period (equivalent to setting pattern = 0).}

\item{cap}{largest dosing period}
}
\value{
A logical vector indicating whether or not a patient
  is dosed during the relevant period (markov cycle).
}
\description{
Determine whether to dose during certain cycles.
}
\details{
\code{init} takes precedence over \code{first}; that is,
  if \code{init} is defined, then \code{first} is ignored.  Similarly,
  \code{pattern} takes precedence over \code{then_every}.
}
\examples{
{
  is_dosing_period(N = 1:13, first = 4, then_every = 3, cap = 40)
  is_dosing_period(N = 37:46, first = 4, then_every = 3, cap = 40)
  is_dosing_period(N = 1:100, init = c(1,0,1,0,1,0,1,1), pattern = c(1, 0, 1, 1, 0), cap = 120)
  ## stop after initial period
  is_dosing_period(N = 1:8, first = 4, pattern = 0, cap = 40)
  is_dosing_period(N = 1:8, first = 4, then_every = -1, cap = 40)
  ## demonstrating argument precedence rules
  is_dosing_period(N = 1:10, init = c(1,0,1), first = 3, then_every = 5)
  is_dosing_period(N = 1:10, init = numeric(0), pattern = c(1, 1, 0, 1, 0), then_every = 2)
}

}

