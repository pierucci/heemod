parameter,value,low,high
A_WAC_price_vial,4380.74,,
A_cost_drug_per_admin,2 * A_WAC_price_vial,,
bsa,1.97,,
B_dose,"ifelse(markov_cycle == 1, 500, 250) * bsa",,
B_cost_drug_per_admin,"least_cost(find_least_cost_partition(B_dose, CompoundVialCost, max_num_units = 5, max_excess = 100, only_least_cost = TRUE , subset_col = ""comparator"", subset_val = ""B""))$cost",,
A_iv_time_hr,"look_up(CompoundParams, compound = ""A"", param = ""iv_time_hr"", value = ""value"")","look_up(CompoundParams, compound = ""A"", param = ""iv_time_hr"", value = ""low"")","look_up(CompoundParams, compound = ""A"", param = ""iv_time_hr"", value = ""high"")"
A_cost_admin_first_hr,"look_up(CompoundParams, compound = ""A"", param = ""cost_admin_first_hr"", value = ""value"")",,
A_cost_admin_addl_hr,"look_up(CompoundParams, compound = ""A"", param = ""cost_admin_addl_hr"", value = ""value"")",,
A_cost_per_admin,"A_iv_time_hr * A_cost_admin_first_hr + pmax(A_iv_time_hr - 1, 0) * A_cost_admin_addl_hr",,
A_max_trt_duration_wk,"look_up(CompoundParams, compound = ""A"", param = ""max_trt_duration_wk"", value = ""value"")",,
B_iv_time_hr,"look_up(CompoundParams, compound = ""B"", param = ""iv_time_hr"", value = ""value"")",,
B_cost_admin_first_hr,"look_up(CompoundParams, compound = ""B"", param = ""cost_admin_first_hr"", value = ""value"")",,
B_cost_admin_addl_hr,"look_up(CompoundParams, compound = ""B"", param = ""cost_admin_addl_hr"", value = ""value"")",,
B_cost_per_admin,"B_iv_time_hr * B_cost_admin_first_hr + pmax(B_iv_time_hr - 1, 0) * B_cost_admin_addl_hr",,
B_max_trt_duration_wk,"look_up(CompoundParams, compound = ""B"", param = ""max_trt_duration_wk"", value = ""value"")",,
is_trt_wk_B,TRUE,,
is_trt_wk_A,markov_cycle %% 3 == 1,,
km_until,0,,
pfs.tr.A,"get_surv_probs(PFS.fit, ""A"", use_km_until = km_until, markov_cycle = markov_cycle, pred_type = ""prob"")",,
os.tr.A,"get_surv_probs(OS.fit, ""A"", use_km_until = km_until, markov_cycle = markov_cycle, pred_type = ""prob"")",,
pfs.tr.B,"get_surv_probs(PFS.fit, ""B"", use_km_until = km_until, markov_cycle = markov_cycle, pred_type = ""prob"")",,
os.tr.B,"get_surv_probs(OS.fit, ""B"", use_km_until = km_until, markov_cycle = markov_cycle, pred_type = ""prob"")",,
utility.dr,0.000671233,,
cost.dr,0.000671233,,
